#!/usr/bin/env zsh

function tldrf() {
  # If argument does not begin with a dash, it is a part of the name input
  tldr_output=$(tldr "$1" | sed 's/\x1b\[[0-9;]*m//g') # Strip shell formatting

  #? If the first line contains "This page doesn't exist yet", exit
  if [[ $(echo "$tldr_output" | head -n 1) == *"This page doesn't exist yet"* ]]; then
    exit 1
  fi

  # Extract the description, starting from line 4 and ending before the link
  description=$(echo "$tldr_output" | awk 'NR>=4 && /^More information/{exit} {print}')
  # The link will always start with `More information`.
  link=$(echo "$tldr_output" | awk '/^More information/ {print}')
  # Save the new note in a variable, starting with the description and the link
  note="---\nschema: doc\n---\n$description\n- [b] $link\n\n## Recipes\n"

  while IFS= read -r line; do #* Iterate over the tldr output, starting from line 6
    if [[ $line == -* ]]; then #? If the line starts with a -, it's a command description
      note="$note\n### ${line:2}\n"
    elif [[ -z "$line" ]]; then #? If the line is empty, skip it
      continue
    elif [[ $line == "   "* ]]; then #? If the line starts with 4 spaces, it's a code block
      note="$note\n\`\`\`shell\n${line:4}\n\`\`\`\n"
    fi
  done < <(echo "$tldr_output" | awk 'NR>6')

  if [[ $2 == "--view" ]]; then # Print the note to the terminal
    echo -e "$note"
  elif [[ $2 == "--copy" ]]; then # Copy the note to the clipboard
    echo -e "$note" | xclip -selection clipboard
    osascript -e 'display notification "TLDR copied to clipboard" with title "tldrformat"'
  else
    file_name=$(echo "$1" | tr ' ' '.')
    echo -e "$note" > "$HOME/git/andrewmcodes/digital-brain/cli.$file_name.md"
    if [[ $? == 0 ]]; then
      osascript -e 'display notification "TLDR saved to file" with title "tldrformat"'
    else
      osascript -e 'display notification "TLDR failed to save to file" with title "tldrformat"'
    fi
  fi
}
